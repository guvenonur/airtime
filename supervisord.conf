; Sample supervisor config file.
;
; For more information on the config file, please see:
; http://supervisord.org/configuration.html
;
; Note: shell expansion ("~" or "$HOME") is not supported. Environment
; variables can be expanded using this syntax: "%(ENV_HOME)s".

[unix_http_server]
file=/tmp/supervisor.sock ; (the path to the socket file)

[supervisord]
logfile=/tmp/supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10 ; (num of main logfile rotation backups;default 10)
loglevel=info ; (log level;default info; others: debug,warn,trace)
pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=false ; (start in foreground if true;default false)
minfds=1024 ; (min. avail startup file descriptors;default 1024)
minprocs=200 ; (min. avail process descriptors;default 200)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL for a unix socket

; The below sample program section shows all possible program subsection values,
; create one or more 'real' program: sections to be able to control them under
; supervisor.

[program:redis-server]
user=onur.guven
command=redis-server
autostart=true
autorestart=true
stdout_logfile=/tmp/airtime-stdout.log
stderr_logfile=/tmp/airtime-stderr.log

[program:flask_app]
user=onur.guven
directory=/Users/onur.guven/External/www/personal/airtime
command=/Users/onur.guven/.virtualenvs/airtime/bin/python main.py
autostart=true
autorestart=true
stdout_logfile=/tmp/airtime-stdout.log
stderr_logfile=/tmp/airtime-stderr.log

[program:airtime_celery]
user=onur.guven
directory=/Users/onur.guven/External/www/personal/airtime
command=/Users/onur.guven/.virtualenvs/airtime/bin/celery -A main.celery worker
autostart=true
autorestart=true
